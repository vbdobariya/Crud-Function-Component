{"ast":null,"code":"var _jsxFileName = \"F:\\\\function-app\\\\my-app\\\\src\\\\Modal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Modal, Button } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modal = () => {\n  _s();\n  const [modalOpen, setModalOpen] = useState({\n    text: ''\n  });\n  const [index, setIndex] = useState(\"\");\n  const modalChange = e => {\n    setModalOpen({\n      ...modalOpen,\n      [e.target.name]: e.target.value\n    });\n    console.log(\"e.target.name\", e.target.name);\n    console.log(\"e.target.value\", e.target.value);\n    console.log(\"modalopen\", modalOpen);\n  };\n  const showModal = () => {\n    setModalOpen(true);\n  };\n  const handleOk = () => {\n    const modalData = modalOpen;\n    console.log(\"modalOpen--------->\", modalOpen);\n    console.log('modalData----------->', modalData);\n    if (index === \"\") {} else {\n      modalData[index] = modalOpen;\n      setIndex(\"\");\n    }\n    setModalOpen({\n      text: ''\n    });\n    setModalOpen(false);\n  };\n  const handleCancel = () => {\n    setModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      style: {\n        margin: 5,\n        marginLeft: 6\n      },\n      onClick: showModal,\n      children: \"Open Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Basic Modal\",\n      open: modalOpen,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        autoComplete: \"off\",\n        type: \"text\",\n        placeholder: \"Text Here...\",\n        name: \"text\",\n        value: modalOpen.text,\n        onChange: e => modalChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(modal, \"EEkT002mUObVCWsFXdOA0bftiBE=\");\nexport default modal;","map":{"version":3,"names":["React","useState","Modal","Button","modal","modalOpen","setModalOpen","text","index","setIndex","modalChange","e","target","name","value","console","log","showModal","handleOk","modalData","handleCancel","margin","marginLeft"],"sources":["F:/function-app/my-app/src/Modal.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport  { Modal, Button }  from 'antd'\r\n\r\nconst modal = () => {\r\n    const [modalOpen, setModalOpen] = useState({text:''});\r\n    const [index, setIndex] = useState(\"\");\r\n\r\n\r\nconst modalChange = (e) => {\r\n  setModalOpen({...modalOpen, [e.target.name]:e.target.value})\r\n  console.log(\"e.target.name\",e.target.name)\r\n  console.log(\"e.target.value\",e.target.value)\r\n  console.log(\"modalopen\",modalOpen)\r\n}\r\n\r\nconst showModal = () => {\r\n  setModalOpen(true);\r\n};\r\n\r\nconst handleOk = () => {\r\n  const modalData = modalOpen\r\n  console.log(\"modalOpen--------->\",modalOpen)\r\n  console.log('modalData----------->',modalData)\r\n  if(index === \"\"){\r\n  }\r\n  else{\r\n    modalData[index] = modalOpen\r\n    setIndex(\"\")\r\n  }\r\n  setModalOpen({text:''})\r\n  setModalOpen(false)\r\n};\r\n\r\nconst handleCancel = () => {\r\n  setModalOpen(false);\r\n};\r\n\r\n  return (\r\n    <div>\r\n      <Button type='primary' style={{margin:5,marginLeft:6 }} onClick={showModal}>Open Modal</Button>\r\n      <Modal title=\"Basic Modal\" open={modalOpen} onOk={handleOk} onCancel={handleCancel}>\r\n      <input autoComplete='off' type=\"text\" placeholder='Text Here...' name='text' value={modalOpen.text} onChange={(e) => modalChange(e)} />\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\nexport default modal;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAUC,KAAK,EAAEC,MAAM,QAAS,MAAM;AAAA;AAEtC,MAAMC,KAAK,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC;IAACM,IAAI,EAAC;EAAE,CAAC,CAAC;EACrD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAG1C,MAAMS,WAAW,GAAIC,CAAC,IAAK;IACzBL,YAAY,CAAC;MAAC,GAAGD,SAAS;MAAE,CAACM,CAAC,CAACC,MAAM,CAACC,IAAI,GAAEF,CAAC,CAACC,MAAM,CAACE;IAAK,CAAC,CAAC;IAC5DC,OAAO,CAACC,GAAG,CAAC,eAAe,EAACL,CAAC,CAACC,MAAM,CAACC,IAAI,CAAC;IAC1CE,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAACL,CAAC,CAACC,MAAM,CAACE,KAAK,CAAC;IAC5CC,OAAO,CAACC,GAAG,CAAC,WAAW,EAACX,SAAS,CAAC;EACpC,CAAC;EAED,MAAMY,SAAS,GAAG,MAAM;IACtBX,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMY,QAAQ,GAAG,MAAM;IACrB,MAAMC,SAAS,GAAGd,SAAS;IAC3BU,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACX,SAAS,CAAC;IAC5CU,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAACG,SAAS,CAAC;IAC9C,IAAGX,KAAK,KAAK,EAAE,EAAC,CAChB,CAAC,MACG;MACFW,SAAS,CAACX,KAAK,CAAC,GAAGH,SAAS;MAC5BI,QAAQ,CAAC,EAAE,CAAC;IACd;IACAH,YAAY,CAAC;MAACC,IAAI,EAAC;IAAE,CAAC,CAAC;IACvBD,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMc,YAAY,GAAG,MAAM;IACzBd,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAEC,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,IAAI,EAAC,SAAS;MAAC,KAAK,EAAE;QAACe,MAAM,EAAC,CAAC;QAACC,UAAU,EAAC;MAAE,CAAE;MAAC,OAAO,EAAEL,SAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,eAC/F,QAAC,KAAK;MAAC,KAAK,EAAC,aAAa;MAAC,IAAI,EAAEZ,SAAU;MAAC,IAAI,EAAEa,QAAS;MAAC,QAAQ,EAAEE,YAAa;MAAA,uBACnF;QAAO,YAAY,EAAC,KAAK;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC,cAAc;QAAC,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEf,SAAS,CAACE,IAAK;QAAC,QAAQ,EAAGI,CAAC,IAAKD,WAAW,CAACC,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC/H;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAA,GA1CKP,KAAK;AA2CX,eAAeA,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}